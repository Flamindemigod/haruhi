@tailwind base;
@tailwind components;
@tailwind utilities;

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --clr-primary: #42a5f5;
  --clr-secondary: #999;
}

body {
  background-color: #2e2e2e;
  color: white;
}

* {
  --scrollbar-foreground: var(--clr-primary);
  --scrollbar-background: var(--clr-secondary);
  /* Foreground, Background */
  scrollbar-color: var(--scrollbar-foreground) var(--scrollbar-background);
}

*::-webkit-scrollbar {
  width: 10px;
  /* Mostly for vertical scrollbars */
  height: 7px;
  /* Mostly for horizontal scrollbars */
}

*::-webkit-scrollbar-thumb {
  /* Foreground */
  background: var(--scrollbar-foreground);
}

*::-webkit-scrollbar-track {
  /* Background */
  background: var(--scrollbar-background);
}

.margin-inline-auto {
  margin-inline: auto;
}




.bannerImage {
  grid-column: 1/-1;
  grid-row: 1/-1;
  animation: bannerMove 30s alternate infinite linear;
}

@media (min-width: 600px) {
 
.bannerImage {
  animation: bannerMove 20s alternate infinite linear;
}
 
}
@keyframes bannerMove{
  0%{
    object-position: left top;
  }
  100%{
    object-position: right bottom;
  }
}


.title-card {
  grid-column: 1/-1;
  grid-row: 2/-1;
}

@media (min-width: 1024px) {
  .title-card {
    grid-column: 2/5;
  }
}

.titleDescriptionContainer {
  margin-block-start: 2rem;
  margin-inline: auto;
}

.readMore {
  max-height: 10rem;
  transition: max-height 200ms ease;
}

.readMore.open {
  max-height: 45rem;

}

.Description {
  position: relative;
}

.readMore>.DescriptionInner {
  overflow: hidden;
  max-height: 7rem;
  transition: max-height 200ms ease;
}

.readMore.open>.DescriptionInner {
  overflow: hidden;
  max-height: 45rem;
}

div.readMore>.before {
  position: absolute;
  inset: 0;
  /* background-color: red; */
  background: linear-gradient(0deg, #2e2e2e 0%, rgba(255, 255, 255, 0) 100%);
}

.readMore.open>.before {
  position: absolute;
  inset: 0;
  background: transparent;
}

.after {
  display: none;
}

.Description.readMore>.after {
  display: block;
  position: absolute;
  overflow: visible;
  bottom: -5%;
  left: 50%;
  transform: translate(-50%, 00%);
  cursor: pointer;
}

.animeDescription.readMore.open>.after {
  position: absolute;
  overflow: visible;
  bottom: 0;
  left: 50%;
  transform: translate(-50%, 100%);
  cursor: pointer;

}

.relatedShows {
  order: -1
}

.relatedShowsFlex:empty+.relatedShows,
.relatedShowsFlex:empty {
  display: none;
}

.relatedShowsFlex:not(:empty)+.relatedShows,
.relatedShowsFlex:not(:empty) {
  display: flex;
}

.splashGrid {
  grid-template-columns: 1fr 1fr 1fr;
  isolation: isolate;
  height: fit-content;
  grid-auto-flow: dense;

}

.splashGrid>div:first-of-type {
  grid-column: 1/1;
  grid-row: 1/1;
  justify-self: center;
  align-self: center;
  z-index: 1;
  padding: 2rem;
}

.splashGrid>div:nth-of-type(2) {

  grid-column: 1/-1;
  grid-row: 1/1;
  justify-self: center;
  align-self: center;
  background: linear-gradient(90deg, rgba(9, 9, 9, 0.8) 30%, rgba(255, 255, 255, 0) 100%);
  width: 100%;
  height: 100%;
}

.splashGrid>.homeImg {
  grid-column: 1 / -1;
  grid-row: 1;
  z-index: -1;
  height: 30rem;
  width: 100%;
  object-fit: cover;
}


.empty{
display: none; 
}

.splashGrid > .activity {
  grid-column: 1 / -1;
  grid-row: 2;
  z-index: 1;
  justify-self: center;
  align-self: center;
  height: 30rem;
overflow-y: scroll;
}

@media (min-width: 640px) {
  .splashGrid > .activity {
    grid-column: 2 / -1;
    grid-row: 1;
    z-index: 1;
    justify-self: center;
    align-self: center;
    height: 30rem;
  overflow-y: scroll;
  }
  
}

.containerHome {
  margin-inline: auto;
}

div.fullscreen {
  background: url("assets/LoginBG.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

div.container {
  border-radius: 2rem;
  width: 95%;
  min-width: 300px;
  max-width: 600px;
  box-shadow: black 5px 5px 10px;
}






.cardLink>.card>div:first-of-type {
  transition: transform 200ms ease;
}

.cardLink:where(:hover, :focus)>.card>div:first-of-type {
  transform: translateY(-100%);
  --tw-bg-opacity: 0.6;
  height: 7rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@media (hover : none) {
  .cardLink>.card>div:first-of-type {
    transform: translateY(-100%);
    --tw-bg-opacity: 0.6;
    height: 7rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}

.cardLink {
  transition: transform 200ms ease;
  transform-origin: bottom center;
  
}
.cardLink:hover, .cardLink:focus {
  transform: scale(1.05);
}


.card>div:first-of-type>div {

  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  /* number of lines to show */
  line-clamp: 3;
  -webkit-box-orient: vertical;
}

.card {
  height: 14rem;
  width: 10rem;
}

.notification {
  position: absolute;
  bottom: 0;
  right: 0;
  left: 0;
  height: 0.25rem;
  background: greenyellow;
  box-shadow: 0px 0px 4px greenyellow;
}

.playerControls,
.playerControls[data-state=hidden] {
  display: none;
  cursor: none;
}

.playerControls[data-state=visible] {
  display: block;
}

.listLink {
  transition: transform 200ms ease;
}

.listLink:hover>* {
  background-color: #42a5f5aa;
}

.description a {
  color: var(--clr-primary)
}

.description a:hover {
  text-decoration: underline;
}

.markdown_spoiler {
  color: transparent;
  background-color: #222;
  transition: color 200ms ease;
}

.markdown_spoiler:hover {
  color: white;
}

.description[data-description-shown=false] {
  height: 12rem;
  overflow: hidden
}

button.react-multiple-carousel__arrow{
  background-color: #42a5f5ee;
  box-shadow: 0 0 0 3px #42a5f5;
}